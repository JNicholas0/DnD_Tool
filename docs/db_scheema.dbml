// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table character {
  id SERIAL [primary key]
  userId SERIAL [note: 'determines user access', not null]
  campaignId SERIAL [not null]
  raceId SERIAL [ref: > race.id, not null]
  statsId SERIAL [ref: > stats.id, not null]
  maxHP integer [not null]
  currentHP integer [not null]
}

Table charecterItems {
  charecterId SERIAL [ref: > character.id, not null]
  itemId SERIAL [ref: > item.id, not null]
}

Table charecterSpells {
  charecterId SERIAL [ref: > character.id, not null]
  spellId SERIAL [ref: > spell.id, not null]
}

Table charecterWeapons {
  charecterId SERIAL [ref: > character.id, not null]
  weaponId SERIAL [ref: > weapon.id, not null]
  isCurrentlyEquipped boolean [not null]
}

Table charecterArmor {
  charecterId SERIAL [ref: > character.id, not null]
  armorId SERIAL [ref: > armor.id, not null]
  isCurrentlyEquipped boolean [not null]
}

Table stats {
  id SERIAL [primary key]
  str integer [not null]
  dex integer [not null]
  con integer [not null]
  int integer [not null]
  wis integer [not null]
  cha integer [not null]
}

Table race {
  id SERIAL [primary key]
  race TEXT [not null]
  subrace TEXT [not null]
  size char [not null]
  speed integer [not null]
  statBonuses SERIAL [ref: > stats.id, not null]
}

Table user {
  id SERIAL [primary key]
  username TEXT [not null]
  role TEXT [not null]
  created_at timestamp [not null]
}

enum ROLE {
  DM
  PLAYER
}

Table role {
  campaignId SERIAL [ref: > campaign.id, not null]
  userId SERIAL [ref: > user.id, not null]
  role ROLE [note: 'user or dm, controls views the user can access']
}

Table campaign {
  id SERIAL [primary key]
  name TEXT [not null]
}

Table encounter {
  id SERIAL [primary key, note: 'prompt DM upon creation']
  totalRounds integer [not null]
  completed boolean [not null]
}

Table action {
  characterId SERIAL [ref: > character.id]
  targetId SERIAL [ref: > character.id]
  encounter SERIAL [ref: > encounter.id, not null]
}

enum DAMAGE_TYPE {
  ACID
  BLUDGEONING
  COLD
  FIRE
  FORCE
  LIGHTNING
  NECROTIC
  PIERCING
  POISON
  PSYCHIC
  RADIANT
  SLASHING
  THUNDER
}

Table weapon {
  id SERIAL [primary key]
  name TEXT [not null]
  description text
  range numeric
  weight numeric [not null]
  valueCopper integer [not null]
}

Table damage {
  id SERIAL [primary key]
  dieSides integer [not null]
  numberOfDice integer [not null]
  damageType DAMAGE_TYPE [not null]
}

Table weaponDamage {
  weaponId SERIAL [ref: > weapon.id, not null]
  damageId SERIAL [ref: > damage.id, not null]
}

enum SPELL_COMPONENT {
  VERBAL
  SOMATIC
  MATERIAL
}

Table spell {
  id SERIAL [primary key]
  name TEXT [not null]
  description text
  range numeric
  minimumLevel integer
  castingTimeSeconds integer
  durationSeconds text 
  requiresConcentration boolean
}

Table spellDamage {
  spellId SERIAL [ref: > spell.id, not null]
  damageId SERIAL [ref: > damage.id, not null]
  savingThrowId SERIAL [ref: > damage.id, not null]
}

Table spellComponents {
  spellId SERIAL [ref: > spell.id, not null]
  component SPELL_COMPONENT [not null]
}

enum ARMOR_CATEGORY {
  LIGHT
  MEDIUM
  HEAVY
  SHIELD
}

Table armor {
  id SERIAL [primary key]
  name TEXT [not null]
  category ARMOR_CATEGORY [not null]
  baseArmorClass integer [not null]
  givesStealthDisadvantage boolean [not null]
  strengthRequirement integer [not null]
  weight numeric [not null]
  valueCopper integer [not null]
}

Table item {
  id SERIAL [primary key]
  name TEXT [not null]
  description TEXT [not null]
  weight numeric [not null]
  valueCoper integer [not null]
}

Table savingThrow {
  id SERIAL [primary key]
  minimumRoll integer [not null]
  statType STAT_TYPE [not null]
  diceSides integer [default: 20]
}

Enum STAT_TYPE {
  STR
  DEX
  CON
  INT
  WIS
  CHA
}